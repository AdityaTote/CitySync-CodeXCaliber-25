/**
 * Admin:
 * - this table is used for admin of the deparments
 * - admin can create a department and assign users to the department
 */

model Admin {
  id       String @id @default(cuid())
  username String @unique
  email    String @unique
  password String

  // relations
  departments     Department[]
  departmentUsers DepartmentUser[]

  createdAt DateTime @default(now())

  @@index([username])
  @@index([email])
  @@index([id, email, username])
  @@map("super_admins")
}

/**
 * Department:
 * - this table is used for departments of the project
 * - admin can create a department and assign users to the department
 * - department can have multiple users and projects
 * - department can be assigned to multiple projects
 */

model Department {
  id          String  @id @default(cuid())
  name        String  @unique
  description String?

  // relations
  adminId            String
  admin              Admin               @relation(fields: [adminId], references: [id], onDelete: Cascade)
  departmentUsers    DepartmentUser[]
  projectDepartments ProjectDepartment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name, id])
  @@index([adminId, id])
  @@map("departments")
}

/**
 * DepartmentUser:
 * - this table is used for users of the department
 * - admin can create a department and assign users to the department
 * - department can have multiple users and projects
 * - department can be assigned to multiple projects
 */

model DepartmentUser {
  id          String   @id @default(cuid())
  email       String   @unique
  name        String
  description String?
  phoneNo     String   @unique
  password    String
  role        UserRole @default(muncipal)

  // relations
  assingedById String?
  asingedBy    Admin?      @relation(fields: [assingedById], references: [id], onDelete: Cascade)
  departmentId String?
  department   Department? @relation(fields: [departmentId], references: [id], onDelete: Cascade)
  projects     Project[]
  comments     Comment[]
  Issue        Issue[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email, id])
  @@index([departmentId, id])
  @@index([departmentId, email])
  @@map("department_users")
}

/**
 * Contractor:
 * - this table is used for contractors of the project
 * - admin can assign project  to the contractor
 * - contractor can have multiple resources and projects
 * - contractor can be assigned to multiple projects
 */

model Contractor {
  id       String @id @default(cuid())
  name     String
  email    String @unique
  phoneNo  String @unique
  GSTIN    String @unique
  password String

  //relations
  projects        Project[]
  resources       Resource[]
  assignResources AssignResource[]

  createdAt DateTime @default(now())

  @@index([email, id])
  @@map("contractors")
}

enum UserRole {
  muncipal
}
